name: sets up dependencies for simeng 

inputs:

  OS:
    required: true

runs:
  using: 'composite'
  steps:
    #######################################
    # install dependencies I think are required to build simeng
    #######################################
    - if: ${{ contains(inputs.OS, 'ubuntu') }}
      name: install dependencies
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        
        apt-get update
        apt-get install -y software-properties-common
        add-apt-repository universe
        add-apt-repository ppa:ubuntu-toolchain-r/test
        apt-get update
        
        apt-get install -y sudo
        apt-get install -y wget
        apt-get install -y zlib1g-dev
        apt-get install -y python3
        apt install -y build-essential
        apt-get install libssl-dev
        apt-get install ninja-build
        apt-get install tree
        apt-get install cmake

        apt-get purge --auto-remove gcc -y

        apt-get update
        apt-get upgrade -y

    - if: ${{ contains(inputs.OS, 'redhat') }}
      name: install dependencies
      shell: bash
      run: |
        dnf -y update && \
        dnf -y install \
        gcc gcc-c++ make \
        cmake \
        git \
        ninja-build \
        python3 \
        wget \
        openssl-devel \
        automake \
        autoconf \
        cmake \
        bzip2 \
        file \
        diffutils \
        zlib-devel && \
        dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm  && \
        dnf update && \
        dnf upgrade && \
        dnf clean all

    - if: ${{ contains(inputs.OS, 'rocky') }}
      name: install dependencies
      shell: bash
      run: |
        dnf -y update && \
        dnf -y install \
        gcc gcc-c++ make \
        cmake \
        git \
        # ninja-build \ doesn't install
        python38 \
        wget \
        openssl-devel \
        automake \
        autoconf \
        cmake \
        bzip2 \
        file \
        # diffutils \ # already installed
        zlib-devel && \
        dnf install -y epel-release && \
        dnf update -y && \
        dnf upgrade -y && \
        dnf clean all