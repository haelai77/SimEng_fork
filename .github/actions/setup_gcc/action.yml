name: setup gcc
description: installs gcc of specified version

inputs:
  OS: 
    required: true
  gcc-version:
    required: true

runs:
  using: 'composite'
  steps:

    # - 
    #   name: Cache GCC ${{ inputs.gcc-version }}
    #   id: cache-gcc
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/usr/local/gcc-${{ inputs.gcc-version }}
    #     key: gcc-${{ inputs.gcc-version }}-${{ inputs.os }}-${{ hashFiles('**/setup_gcc.sh') }}
    #     restore-keys: |
    #       gcc-${{ inputs.gcc-version }}-${{ inputs.os }}-


    - name: install gcc ${{ inputs.gcc-version }}
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y wget
        apt-get install -y libz-dev
        apt install -y build-essential
        apt install -y cmake
        apt install -y git

        wget https://ftp.gnu.org/gnu/gcc/${{ inputs.gcc-version }}/${{ inputs.gcc-version }}.tar.gz > /dev/null 2>&1
        
        tar -xvf ${{ inputs.gcc-version }}.tar.gz > /dev/null 2>&1

        cd ${{ inputs.gcc-version }}
        pwd

        ./contrib/download_prerequisites > /dev/null

        ./configure --enable-languages=c,c++ --disable-multilib --with-system-zlib --prefix=$HOME/usr/local/${{ inputs.gcc-version }}

        make -j$(nproc)
        make install
    
    - name: build simeng
      shell: bash
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSIMENG_ENABLE_TESTS=ON -DCMAKE_C_COMPILER=$HOME/usr/local/${{ inputs.gcc-version }}/bin/gcc -DCMAKE_CXX_COMPILER=$HOME/usr/local/${{ inputs.gcc-version }}/bin/c++
        cmake --build build -j
        sudo cmake --build build --target install
