name: test on various OS & Compilers

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  LLVM-VERSION: 14
  BENCHMARK_BRANCH: 'make-file-build-system' # the branch inside the benchmark repo that has the script to run all benchmarks

on:
  workflow_dispatch:
  pull_request:

jobs:
  Build_and_Run:
    
    strategy:
      fail-fast: false
      matrix:
        OS: ['ubuntu:20.04']
        COMPILER: ['gcc-7.3.0', 'gcc-8.3.0', 'gcc-9.3.0', 'gcc-10.3.0'] #, 'armclang-22.0.2']

        # ensures that older gcc runs on older ubunutu due to dependencies
        exclude:
          - OS: 'ubuntu:20.04'
            COMPILER: 'gcc-7.3.0'
          - OS: 'ubuntu:20.04'
            COMPILER: 'gcc-8.3.0'

        include:      
          - OS: 'ubuntu:18.04'
            COMPILER: 'gcc-7.3.0'
          - OS: 'ubuntu:18.04'
            COMPILER: 'gcc-8.3.0'
      
    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.OS }}

    name: ${{ matrix.OS }} + ${{ matrix.compiler }}

    steps:
      ##########################################
      # # # copies repo to container (different action version due to node version dependencies)
      - if: ${{ contains(fromJson('["ubuntu:18.04"]'), matrix.OS) }}
        name: checkout v3
        uses: actions/checkout@v3

      - if: ${{ contains(fromJson('["ubuntu:20.04"]'), matrix.OS) }}
        name: checkout v4
        uses: actions/checkout@v4

      ##########################################

      - name: setup compiler and OS env + build simeng
        uses: ./.github/actions/select_env
        with: 
          LLVM-VERSION: ${{ env.LLVM-VERSION }}
          OS: ${{ matrix.OS }}
          COMPILER: ${{ matrix.COMPILER }}

      ##########################################
      # run unit test
      - name: Unit Tests
        shell: bash
        run: |
          ./build/test/unit/unittests
      ##########################################
      # run regression aarch64
      - name: regression test (aarch64)
        if: always()
        shell: bash
        run: |
          ./build/test/regression/aarch64/regression-aarch64
      ##########################################
      # run regression riscv
      - name: regression test (riscv)
        if: always()
        shell: bash
        run: |
          ./build/test/regression/riscv/regression-riscv
      ##########################################
      - if: always()
        name: run benchmarks
        uses: ./.github/actions/simeng_benchmarks
        with:
          BENCHMARK_BRANCH: ${{ env.BENCHMARK_BRANCH }}
          OS: ${{ matrix.OS }}
            ##########################################
      #note remove later
      - if: always()
        name: directory structure
        run: |
          tree -L 2
          cd ..
          echo "############################################"
          tree -L 2