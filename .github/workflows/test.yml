name: test

# workflow triggers
on:
  workflow_dispatch:
  pull_request:


jobs:
  Build_and_Run:

    strategy:
      fail-fast: false
      matrix: 
        OS: ["ubuntu:20.04"] # ["ubuntu:20.04", "debian:12.4", "centos:7", "redhat/ubi8", "rockylinux:9.3", "linuxmintd/mint21.2-amd64"]
        Compiler: [gcc-9.3.0] # [gcc-7.3.0, gcc-9.3.0, gcc-10.3.0]
        
        # arm clang: https://stackoverflow.com/a/77926332/23476625

        # We remove the combination (ubuntu:20.04, gcc-7.3.0) because ubuntu versions above 18.04 are missing some depreciated files required for gcc 7.3.0 to run
        # We replace (ubuntu:20.04, gcc-7.3.0) with (ubuntu:18.04, gcc-7.3.0)

    
    runs-on: ubuntu-latest

    container: 
      image: ${{ matrix.OS }}
    
    name: test
    steps:
      - name: checkout
        uses: actions/checkout@v4

      # - name: Cache gcc
      #   id: gcc-cache
      #   uses: actions/cache@v4
      #   with:
      #     save-always: true
      #     path: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ inputs.gcc-version }}
      #     key: gcc-9.3.0-${{ matrix.OS }}

      - name: "OS"
        run: |
          cat /etc/os-release
          ls /usr
          echo "~~~~~~~~~~~~~~~"
          ls /usr/bin
          echo "~~~~~~~~~~~~~~~"

      - name: check directories
        shell: bash
        run: |
          pwd
          ls -al
          apt-get update
          apt-get install -y wget
          apt-get install -y libz-dev
          apt-get install -y python3
          apt install -y build-essential
          apt install -y git
          apt install -y sudo
          apt-get install -y libssl-dev
          apt-get install -y tree
          # apt-get install -y type

          ls /usr/bin
      
      - name: cmake restore
        id: cmake-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/bin/cmake
            /usr/local/share/cmake-3.29
          key: cmake-${{ matrix.OS }}


      - if: ${{ steps.cmake-restore.outputs.cache-hit != 'true' }}
        name: install cmake
        shell: bash
        run: |
            ### latest stable release of cmake

            wget https://github.com/Kitware/CMake/releases/download/v3.29.5/cmake-3.29.5.tar.gz
            tar zxvf cmake-3.29.5.tar.gz
            cd cmake-3.29.5
            ./bootstrap
            make
            make install
            # make DESTDIR=/__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/cmake-built install

      - name: cmake save
        id: cmake-save
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/bin/cmake
            /usr/local/share/cmake-3.29
          key: cmake-${{ matrix.OS }}

      - name: tree
        shell: bash
        run: |
            pwd | ls
            
            # tree -a $HOME
            tree -a /__w/
            ls /usr/bin

            echo "########"
            cmake --version
            echo "########"

            echo $PATH
            type -a cmake
            which cmake
            echo "########"
            
